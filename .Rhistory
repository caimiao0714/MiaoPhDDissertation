bookdown::render_book()
bookdown::render_book("index.Rmd")
bookdown::render_book("index.Rmd")
bookdown::render_book("index.Rmd")
bookdown::render_book("index.Rmd")
bookdown::render_book("index.Rmd")
bookdown::render_book("index.Rmd")
bookdown::render_book("index.Rmd")
bookdown::render_book("index.Rmd")
install.packages("bookdown")
citation("INLA")
print(citation("INLA"), bibtex=TRUE)
6/2(1+2)
6/2*(1+2)
686-224
exp(0.0746)
exp(0.0746 - 1.96*0.0315)
exp(0.0746 + 1.96*0.0315)
d = data.frame(id = rep(1:3, 4), x = letters(1:12))
d = data.frame(id = rep(1:3, 4), x = letter(1:12))
letters
d = data.frame(id = rep(1:3, 4), x = letter[1:12])
d = data.frame(id = rep(1:3, 4), x = letters[1:12])
require(dplyr)
d
d %>% mutate(x = ifelse(x == "a", "z", x))
d %>% mutate(ifelse(x == "a", "z", x))
d %>% mutate(x1 = ifelse(x == "a", "z", x))
d %>% mutate(x1 = ifelse(x == "a", "z", "pp"))
d %>% mutate(x1 = case_when(x == "a" ~ "z", TRUE ~ "pp"))
d %>% mutate(x1 = case_when(x == "a" ~ "z", FALSE ~ "pp"))
d %>% mutate(x1 = case_when(x == "a" ~ "z", TRUE ~ "pp"))
d %>% mutate(x1 = if_else(x == "a", "z", "pp"))
d %>% mutate(x1 = ifelse(x == "a", "z", "pp"))
d %>% mutate(x1 = ifelse(x == "a", "z", X))
d %>% mutate(x1 = ifelse(x == "a", "z", x))
d %>% mutate(x1 = case_when(x == "a", "z", TRUE ~ x))
d %>% mutate(x1 = case_when(x == "a" ~ "z", TRUE ~ x))
str(d)
d = data.frame(id = rep(1:3, 4), x = letters[1:12])
str(d)
d = data.frame(id = rep(1:3, 4), x = letters[1:12], stringsAsFactors = FALSE)
str(d)
d %>% mutate(x1 = ifelse(x == "a", ppp, x))
d %>% mutate(x1 = ifelse(x == "a", "ppp", x))
2*10^8
options(scipen = 1000)
2*10^8
??dir_ls
vignette("datatable-reference-semantics")
2*31
2^31
round(0.5)
round(0.51)
data.table(mtcars)[,.(cyl, mpg)]
require(data.table)
data.table(mtcars)[,.(cyl, mpg)]
df <- mtcars[,c('cyl', 'mpg')]
add_column_df <- function(df) {
df$addcol1<- 'here in func!'
df$addcol2 <<- 'in glob env!'
return(df)
}
add_column_df()
add_column_df(df)
df
dt <- data.table(mtcars)
add_column_dt <- function(dat) {
dat[,addcol:='sticking_to_dt!'] # hits dt in glob env
return(dat)
}
dt
head(dt)
head(add_column_dt(dt))
dt
head(dt)
iris
?anova.pwr.mixed
update.packages()
install.packages("sf")
p = 0.5
p += 0.5
t1 <- data.frame(sex = c('F', 'F', 'M', 'M', 'M' , 'F', 'M'),
color = c('blue', 'brown', 'blue', 'brown', 'blue', 'blue', 'green'))
table(t1)
class(table(t1))
as.matrix(table(t1))
class(as.matrix(table(t1)))
table(t1)$color
data.matrix(table(t1))
class(data.matrix(table(t1)))
DF <- data.frame(table(t1))
pmfY <- apply(as.matrix.noquote(DF),2,as.numeric)
pmfY
require(dplyr)
t1
table(t1)
count(t1, sex, color)
count(t1, sex, color) %>% tidyr::gather(color)
?tidyr::gather
count(t1, sex, color) %>% tidyr::gather(key = color, value = n)
count(t1, sex, color) %>% tidyr::gather(key = color, -n)
count(t1, sex, color) %>% tidyr::spread(key = color, -n)
?tidyr::spread
count(t1, sex, color) %>% tidyr::spread(key = color, value = n)
table(t1)
count(t1, sex, color) %>% tidyr::spread(key = color, value = n, fill = 0)
t1 %>%
count(sex, color) %>%
tidyr::spread(key = color, value = n, fill = 0) %>%
as.matrix()
t1 %>%
count(sex, color) %>%
tidyr::spread(key = color, value = n, fill = 0)
