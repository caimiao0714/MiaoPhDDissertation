aes(x = t, y = intensity1), size = 0.8) +
geom_line(data = INTENS[INTENS$t >= rest_time[4],],
aes(x = t, y = intensity1), size = 0.8) +
geom_line(data = INTENS,
aes(x = t, y = intensity), alpha = 0.3, size = 0.8)+
geom_point(data = SCE, aes(x = t_SCE, y = shift_id),
alpha = 1, shape = 4, color = 'red', size = 2, stroke = 1.5) +
geom_segment(data = LIM,
aes(x = start_time, xend = end_time, y = shift_id, yend = shift_id),
arrow = arrow(length = unit(0.2, "cm")), lineend = 'butt', size = 0.8) +
scale_x_continuous(expand = c(0.001, 0))+
scale_y_continuous(labels = c(0, max_int), breaks = c(0, max_int),
expand = c(0.02, 0)) +
geom_polygon(data = REST1, aes(xaxis, yaxis),
fill="green", alpha = 0.2) +
geom_polygon(data = REST2, aes(xaxis, yaxis),
fill="green", alpha = 0.2) +
labs(x = unname(latex2exp::TeX('Time to SCEs (hours), $t_1$ - $t_n$')),
y = "intensity") +
geom_text(aes(x = c(4.5, 8.7), y = rep(max_int/2, 2),
label = c("rest 1","rest 2"))) +
theme_bw()+
theme(panel.grid = element_blank())#panel.border = element_blank()
p1
ggsave("figs/PLP_jump_point_intensity.pdf", p1, width = 10, height = 6.18)
NDS uses
> **unobtrusive** devices, sensors, and cameras installed on vehicles to **proactively** collect frequent naturalistic driving behavior and performance data under **real-world driving** conditions [@hickman2018synthetic; @guo2019statistical]
### Bayesian hierarchical NHPP with PLP intensity function
I assume that the times of critical events within the $d$-th driver's $s$-th shift were generated from a PLP, with a fixed shape parameter $\beta$ and varying scale parameters $\theta_{d, s}$ across drivers $d$ and shifts $s$. In a PLP, the intensity function of the NHPP is $\lambda(t) = \frac{\beta}{\theta}(\frac{t}{\theta})^{\beta-1}$. The model is described in Equation \@ref(eq:nhpp).
\begin{equation}
\begin{aligned}
T_{d, s, 1}, T_{d, s, 2}, \cdots , T_{d, s, n_{d, s}} & \sim \text{PLP}(\beta, \theta_{d, s})\\
\beta & \sim \text{Gamma}(1, 1)\\
\log\theta_{d, s} &= \gamma_{0d} + \gamma_{1}x_{d, s, 1} + \gamma_{2}x_{d, s, 2} + \cdots + \gamma_{k}x_{d, s, k}\\
\gamma_{01}, \gamma_{02}, \cdots, \gamma_{0D} & \sim \text{i.i.d. }N(\mu_0, \sigma_0^2)\\
\gamma_1, \gamma_2, \cdots, \gamma_k & \sim \text{i.i.d. }N(0, 10^2)\\
\mu_0 &\sim N(0, 10^2) \\
\sigma_0 &\sim \text{Gamma}(1, 1)
(\#eq:nhpp)
\end{aligned}
\end{equation}
The shape parameter $\beta$ shows the reliability changes of drivers. When $\beta > 1$, the intensity function $\lambda(t)$ is increasing, the reliability of drivers is  decreasing, and SCEs are becoming more frequent; when $\beta < 1$, the intensity function $\lambda(t)$ is decreasing, the reliability of drivers is increasing, and SCEs are becoming less frequent; when $\beta = 1$, the NHPP is simplified as a homogeneous Poisson process with the intensity of $1/\theta$. The $\theta_{d, s}$ is a scale parameter that does not reflect reliability changes.
pacman::p_load(ggplot2, dplyr, extrafont)
font_import(pattern = "lmroman*")
plp = function(t, beta = 2, theta = 10) return(beta*theta^(-beta)*t^(beta-1))
set.seed(223)
tau0 = 13; beta0 = 1.2; theta0 = 2
rest_time = c(4, 8)
# SCE time
t_SCE = c(1.5081062, 2.9090437, 3.821632,
4.75131, 6.3752535, 7.2168730,
10.5380954, 12.1135213)
shift_id= rep(0, length(t_SCE))
SCE = data.frame(shift_id, t_SCE)
# Intensity and limit
INTENS = data.frame(t = seq(0, tau0, 0.001),
intensity = plp(seq(0, tau0, 0.001), beta0, theta0)) %>%
mutate(type = ifelse(((t >= rest_time[1] & t <= rest_time[2])|(t >= rest_time[3] & t <= rest_time[4])), 0.2, 1))
# LIM data
LIM = data.frame(start_time = 0, end_time = tau0, shift_id = shift_id)
# maximum intensity
max_int = round(max(INTENS$intensity), 2) + 0.01
# plot
p0 = ggplot() +
geom_line(data = INTENS, aes(x = t, y = intensity), size = 0.8) +
geom_point(data = SCE, aes(x = t_SCE, y = shift_id),
alpha = 1, shape = 4, color = 'red', size = 2, stroke = 1.5) +
geom_segment(data = LIM,
aes(x = start_time, xend = end_time, y = shift_id, yend = shift_id),
arrow = arrow(length = unit(0.2, "cm")), lineend = 'butt', size = 0.8) +
scale_x_continuous(expand = c(0.001, 0))+
scale_y_continuous(labels = c(0, max_int), breaks = c(0, max_int),
expand = c(0.02, 0)) +
geom_vline(xintercept = rest_time[1], color="green",
alpha = 0.7, size = 1.2, linetype = "dashed") +
geom_vline(xintercept = rest_time[2], color="green",
alpha = 0.7, size = 1.2, linetype = "dashed") +
labs(x = unname(latex2exp::TeX('Time to SCEs (hours), $t_1$ - $t_n$')),
y = "intensity") +
geom_text(aes(x = c(4.5, 8.5), y = rep(max_int/3, 2),
label = c("rest 1","rest 2")),
color = "darkgreen", size = 5, family="LM Roman 10") +
theme_bw()+
theme(panel.grid = element_blank(),
text = element_text(size=10, family="LM Roman 10"))
p0
ggsave("figs/PLP_NHPP_intensity_rev.pdf", p0, width = 10, height = 6.18)
set.seed(223)
tau0 = 13; beta0 = 1.2; theta0 = 2; kappa = 0.8
rest_time = c(4, 8)
# SCE time
t_SCE = c(1.5081062, 2.9090437, 3.821632,
4.75131, 6.3752535, 7.2168730,
10.5380954, 12.1135213)
shift_id= rep(0, length(t_SCE))
SCE = data.frame(shift_id, t_SCE)
# Intensity and limit
INTENS = data.frame(t = seq(0, tau0, 0.001),
intensity = plp(seq(0, tau0, 0.001), beta0, theta0)) %>%
mutate(intensity1 = case_when(
t >= rest_time[1] & t <= rest_time[2] ~ intensity*kappa^1,
t >= rest_time[2]  ~ intensity*kappa^2,
TRUE ~ intensity*kappa^0))
# plot
p1 = ggplot() +
geom_line(data = INTENS[INTENS$t < rest_time[1],],
aes(x = t, y = intensity1), size = 0.8) +
geom_line(data = INTENS[INTENS$t > rest_time[1]&INTENS$t <= rest_time[2],],
aes(x = t, y = intensity1), size = 0.8) +
geom_line(data = INTENS[INTENS$t > rest_time[2],],
aes(x = t, y = intensity1), size = 0.8) +
geom_line(data = INTENS,
aes(x = t, y = intensity), alpha = 0.3, size = 0.8)+
geom_point(data = SCE, aes(x = t_SCE, y = shift_id),
alpha = 1, shape = 4, color = 'red', size = 2, stroke = 1.5) +
geom_segment(data = LIM,
aes(x = start_time, xend = end_time, y = shift_id, yend = shift_id),
arrow = arrow(length = unit(0.2, "cm")), lineend = 'butt', size = 0.8) +
scale_x_continuous(expand = c(0.001, 0))+
scale_y_continuous(labels = c(0, max_int), breaks = c(0, max_int),
expand = c(0.02, 0)) +
geom_vline(xintercept = rest_time[1], color="green",
alpha = 0.7, size = 1.2, linetype = "dashed") +
geom_vline(xintercept = rest_time[2], color="green",
alpha = 0.7, size = 1.2, linetype = "dashed")+
labs(x = unname(latex2exp::TeX('Time to SCEs (hours), $t_1$ - $t_n$')),
y = "intensity") +
geom_text(aes(x = c(4.5, 8.5), y = rep(max_int/3, 2),
label = c("rest 1","rest 2")),
color = "darkgreen", size = 5, family="LM Roman 10") +
theme_bw()+
theme(panel.grid = element_blank(),
text = element_text(size=10, family="LM Roman 10"))
p1
ggsave("figs/PLP_jump_point_intensity.pdf", p1, width = 10, height = 6.18)
set.seed(223)
tau0 = 13; beta0 = 1.2; theta0 = 2; kappa = 0.8
rest_time = c(4, 8)
# SCE time
t_SCE = c(1.5081062, 2.9090437, 3.821632,
4.75131, 6.3752535, 7.2168730,
10.5380954, 12.1135213)
shift_id= rep(0, length(t_SCE))
SCE = data.frame(shift_id, t_SCE)
# Intensity and limit
INTENS = data.frame(t = seq(0, tau0, 0.001),
intensity = plp(seq(0, tau0, 0.001), beta0, theta0)) %>%
mutate(intensity1 = case_when(
t >= rest_time[1] & t <= rest_time[2] ~ intensity*kappa^1,
t >= rest_time[2]  ~ intensity*kappa^2,
TRUE ~ intensity*kappa^0))
# plot
p1 = ggplot() +
geom_line(data = INTENS[INTENS$t < rest_time[1],],
aes(x = t, y = intensity1), size = 0.8) +
geom_line(data = INTENS[INTENS$t > rest_time[1]&INTENS$t <= rest_time[2],],
aes(x = t, y = intensity1), size = 0.8) +
geom_line(data = INTENS[INTENS$t > rest_time[2],],
aes(x = t, y = intensity1), size = 0.8) +
geom_line(data = INTENS,
aes(x = t, y = intensity), alpha = 0.3, size = 0.8)+
geom_point(data = SCE, aes(x = t_SCE, y = shift_id),
alpha = 1, shape = 4, color = 'red', size = 2, stroke = 1.5) +
geom_segment(data = LIM,
aes(x = start_time, xend = end_time, y = shift_id, yend = shift_id),
arrow = arrow(length = unit(0.2, "cm")), lineend = 'butt', size = 0.8) +
scale_x_continuous(expand = c(0.001, 0))+
scale_y_continuous(labels = c(0, max_int), breaks = c(0, max_int),
expand = c(0.02, 0)) +
geom_vline(xintercept = rest_time[1], color="green",
alpha = 0.7, size = 1.2, linetype = "dashed") +
geom_vline(xintercept = rest_time[2], color="green",
alpha = 0.7, size = 1.2, linetype = "dashed")+
labs(x = unname(latex2exp::TeX('Time to SCEs (hours), $t_1$ - $t_n$')),
y = "intensity") +
geom_text(aes(x = c(4.5, 8.5), y = rep(max_int/3, 2),
label = c("rest 1","rest 2")),
color = "darkgreen", size = 5, family="LM Roman 10") +
theme_bw()+
theme(panel.grid = element_blank(),
text = element_text(size=10, family="LM Roman 10"))
p1
ggsave("figs/PLP_jump_point_intensity_rev.pdf", p1, width = 10, height = 6.18)
plp = function(t, beta = 2, theta = 10) return(beta*theta^(-beta)*t^(beta-1))
sim_plp_tau = function(tau = 30,
beta = 2,
theta = 10){
# initialization
s = 0; t = 0
while (max(t) <= tau) {
u <- runif(1)
s <- s - log(u)
t_new <- theta*s^(1/beta)
t <- c(t, t_new)
}
t = t[c(-1, -length(t))]
return(t)
}
pacman::p_load(ggplot2, dplyr)
set.seed(223)
tau0 = 13; beta0 = 1.2; theta0 = 2
rest_time = c(4, 5, 8.2, 9.2)
# SCE time
t_SCE = sim_plp_tau(tau = tau0, beta = beta0, theta = theta0)
shift_id= rep(0, length(t_SCE))
SCE = data.frame(shift_id, t_SCE)
# Intensity and limit
INTENS = data.frame(t = seq(0, tau0, 0.001),
intensity = plp(seq(0, tau0, 0.001), beta0, theta0)) %>%
mutate(type = ifelse(((t >= rest_time[1] & t <= rest_time[2])|(t >= rest_time[3] & t <= rest_time[4])), 0.2, 1))
# LIM data
LIM = data.frame(start_time = 0, end_time = tau0, shift_id = shift_id)
# maximum intensity
max_int = round(max(INTENS$intensity), 2) + 0.01
# Rest
REST1 = data.frame(xaxis = c(rest_time[1:2], rev(rest_time[1:2])),
yaxis = rep(c(0, max(INTENS$intensity)), each = 2))
REST2 = data.frame(xaxis = c(rest_time[3:4], rev(rest_time[3:4])),
yaxis = rep(c(0, max(INTENS$intensity)), each = 2))
# plot
p0 = ggplot() +
geom_line(data = INTENS, aes(x = t, y = intensity), size = 0.8) +
geom_point(data = SCE, aes(x = t_SCE, y = shift_id),
alpha = 1, shape = 4, color = 'red', size = 2, stroke = 1.5) +
geom_segment(data = LIM,
aes(x = start_time, xend = end_time, y = shift_id, yend = shift_id),
arrow = arrow(length = unit(0.2, "cm")), lineend = 'butt', size = 0.8) +
scale_x_continuous(expand = c(0.001, 0))+
scale_y_continuous(labels = c(0, max_int), breaks = c(0, max_int),
expand = c(0.02, 0)) +
geom_polygon(data = REST1, aes(xaxis, yaxis),
fill="green", alpha = 0.2) +
geom_polygon(data = REST2, aes(xaxis, yaxis),
fill="green", alpha = 0.2) +
labs(x = unname(latex2exp::TeX('Time to SCEs (hours), $t_1$ - $t_n$')),
y = "intensity") +
geom_text(aes(x = c(4.5, 8.7), y = rep(max_int/2, 2),
label = c("rest 1","rest 2"))) +
theme_bw()+
theme(panel.grid = element_blank())
p0
ggsave("figs/PLP_NHPP_intensity.pdf", p0, width = 10, height = 6.18)
set.seed(223)
tau0 = 13; beta0 = 1.2; theta0 = 2; kappa = 0.8
# SCE time
t_SCE = sim_plp_tau(tau = tau0, beta = beta0, theta = theta0)
shift_id= rep(0, length(t_SCE))
SCE = data.frame(shift_id, t_SCE)
# Rest
rest_time = c(4, 5, 8.2, 9.2)
REST1 = data.frame(xaxis = c(rest_time[1:2], rev(rest_time[1:2])),
yaxis = rep(c(0,max(INTENS$intensity)), each = 2))
REST2 = data.frame(xaxis = c(rest_time[3:4], rev(rest_time[3:4])),
yaxis = rep(c(0,max(INTENS$intensity)), each = 2))
# Intensity and limit
INTENS = data.frame(t = seq(0, tau0, 0.001),
intensity = plp(seq(0, tau0, 0.001), beta0, theta0)) %>%
mutate(intensity1 = case_when(
t >= rest_time[2] & t <= rest_time[3] ~ intensity*kappa^1,
t >= rest_time[4]  ~ intensity*kappa^2,
TRUE ~ intensity*kappa^0))
# plot
p1 = ggplot() +
geom_line(data = INTENS[INTENS$t <= rest_time[1],],
aes(x = t, y = intensity1), size = 0.8) +
geom_line(data = INTENS[INTENS$t >= rest_time[2]&INTENS$t <= rest_time[3],],
aes(x = t, y = intensity1), size = 0.8) +
geom_line(data = INTENS[INTENS$t >= rest_time[4],],
aes(x = t, y = intensity1), size = 0.8) +
geom_line(data = INTENS,
aes(x = t, y = intensity), alpha = 0.3, size = 0.8)+
geom_point(data = SCE, aes(x = t_SCE, y = shift_id),
alpha = 1, shape = 4, color = 'red', size = 2, stroke = 1.5) +
geom_segment(data = LIM,
aes(x = start_time, xend = end_time, y = shift_id, yend = shift_id),
arrow = arrow(length = unit(0.2, "cm")), lineend = 'butt', size = 0.8) +
scale_x_continuous(expand = c(0.001, 0))+
scale_y_continuous(labels = c(0, max_int), breaks = c(0, max_int),
expand = c(0.02, 0)) +
geom_polygon(data = REST1, aes(xaxis, yaxis),
fill="green", alpha = 0.2) +
geom_polygon(data = REST2, aes(xaxis, yaxis),
fill="green", alpha = 0.2) +
labs(x = unname(latex2exp::TeX('Time to SCEs (hours), $t_1$ - $t_n$')),
y = "intensity") +
geom_text(aes(x = c(4.5, 8.7), y = rep(max_int/2, 2),
label = c("rest 1","rest 2"))) +
theme_bw()+
theme(panel.grid = element_blank())#panel.border = element_blank()
p1
ggsave("figs/PLP_jump_point_intensity.pdf", p1, width = 10, height = 6.18)
p1 = ggplot() +
geom_line(data = INTENS[INTENS$t < rest_time[1],],
aes(x = t, y = intensity1), size = 0.8) +
geom_line(data = INTENS[INTENS$t > rest_time[1]&INTENS$t <= rest_time[2],],
aes(x = t, y = intensity1), size = 0.8) +
geom_line(data = INTENS[INTENS$t > rest_time[2],],
aes(x = t, y = intensity1), size = 0.8) +
geom_line(data = INTENS,
aes(x = t, y = intensity), alpha = 0.3, size = 0.8)+
geom_point(data = SCE, aes(x = t_SCE, y = shift_id),
alpha = 1, shape = 4, color = 'red', size = 2, stroke = 1.5) +
geom_segment(data = LIM,
aes(x = start_time, xend = end_time, y = shift_id, yend = shift_id),
arrow = arrow(length = unit(0.2, "cm")), lineend = 'butt', size = 0.8) +
scale_x_continuous(expand = c(0.001, 0))+
scale_y_continuous(labels = c(0, max_int), breaks = c(0, max_int),
expand = c(0.02, 0)) +
geom_vline(xintercept = rest_time[1], color="green",
alpha = 0.7, size = 1.2, linetype = "dashed") +
geom_vline(xintercept = rest_time[2], color="green",
alpha = 0.7, size = 1.2, linetype = "dashed")+
labs(x = unname(latex2exp::TeX('Time to SCEs (hours), $t_1 \rightarrow t_n$')),
y = "intensity") +
geom_text(aes(x = c(4.5, 8.5), y = rep(max_int/3, 2),
label = c("rest 1","rest 2")),
color = "darkgreen", size = 5, family="LM Roman 10") +
theme_bw()+
theme(panel.grid = element_blank(),
text = element_text(size=10, family="LM Roman 10"))
p1
p1 = ggplot() +
geom_line(data = INTENS[INTENS$t < rest_time[1],],
aes(x = t, y = intensity1), size = 0.8) +
geom_line(data = INTENS[INTENS$t > rest_time[1]&INTENS$t <= rest_time[2],],
aes(x = t, y = intensity1), size = 0.8) +
geom_line(data = INTENS[INTENS$t > rest_time[2],],
aes(x = t, y = intensity1), size = 0.8) +
geom_line(data = INTENS,
aes(x = t, y = intensity), alpha = 0.3, size = 0.8)+
geom_point(data = SCE, aes(x = t_SCE, y = shift_id),
alpha = 1, shape = 4, color = 'red', size = 2, stroke = 1.5) +
geom_segment(data = LIM,
aes(x = start_time, xend = end_time, y = shift_id, yend = shift_id),
arrow = arrow(length = unit(0.2, "cm")), lineend = 'butt', size = 0.8) +
scale_x_continuous(expand = c(0.001, 0))+
scale_y_continuous(labels = c(0, max_int), breaks = c(0, max_int),
expand = c(0.02, 0)) +
geom_vline(xintercept = rest_time[1], color="green",
alpha = 0.7, size = 1.2, linetype = "dashed") +
geom_vline(xintercept = rest_time[2], color="green",
alpha = 0.7, size = 1.2, linetype = "dashed")+
labs(x = unname(latex2exp::TeX('Time to SCEs (hours), $t_1 \\rightarrow t_n$')),
y = "intensity") +
geom_text(aes(x = c(4.5, 8.5), y = rep(max_int/3, 2),
label = c("rest 1","rest 2")),
color = "darkgreen", size = 5, family="LM Roman 10") +
theme_bw()+
theme(panel.grid = element_blank(),
text = element_text(size=10, family="LM Roman 10"))
p1
p0 = ggplot() +
geom_line(data = INTENS, aes(x = t, y = intensity), size = 0.8) +
geom_point(data = SCE, aes(x = t_SCE, y = shift_id),
alpha = 1, shape = 4, color = 'red', size = 2, stroke = 1.5) +
geom_segment(data = LIM,
aes(x = start_time, xend = end_time, y = shift_id, yend = shift_id),
arrow = arrow(length = unit(0.2, "cm")), lineend = 'butt', size = 0.8) +
scale_x_continuous(expand = c(0.001, 0))+
scale_y_continuous(labels = c(0, max_int), breaks = c(0, max_int),
expand = c(0.02, 0)) +
geom_vline(xintercept = rest_time[1], color="green",
alpha = 0.7, size = 1.2, linetype = "dashed") +
geom_vline(xintercept = rest_time[2], color="green",
alpha = 0.7, size = 1.2, linetype = "dashed") +
labs(x = unname(latex2exp::TeX('Time to SCEs (hours), $t_1 \\rightarrow t_n$')),
y = "intensity") +
geom_text(aes(x = c(4.5, 8.5), y = rep(max_int/3, 2),
label = c("rest 1","rest 2")),
color = "darkgreen", size = 5, family="LM Roman 10") +
theme_bw()+
theme(panel.grid = element_blank(),
text = element_text(size=10, family="LM Roman 10"))
p0
pacman::p_load(ggplot2, dplyr, extrafont)
font_import(pattern = "lmroman*")
plp = function(t, beta = 2, theta = 10) return(beta*theta^(-beta)*t^(beta-1))
set.seed(223)
tau0 = 13; beta0 = 1.2; theta0 = 2
rest_time = c(4, 8)
# SCE time
t_SCE = c(1.5081062, 2.9090437, 3.821632,
4.75131, 6.3752535, 7.2168730,
10.5380954, 12.1135213)
shift_id= rep(0, length(t_SCE))
SCE = data.frame(shift_id, t_SCE)
# Intensity and limit
INTENS = data.frame(t = seq(0, tau0, 0.001),
intensity = plp(seq(0, tau0, 0.001), beta0, theta0)) %>%
mutate(type = ifelse(((t >= rest_time[1] & t <= rest_time[2])|(t >= rest_time[3] & t <= rest_time[4])), 0.2, 1))
# LIM data
LIM = data.frame(start_time = 0, end_time = tau0, shift_id = shift_id)
# maximum intensity
max_int = round(max(INTENS$intensity), 2) + 0.01
# plot
p0 = ggplot() +
geom_line(data = INTENS, aes(x = t, y = intensity), size = 0.8) +
geom_point(data = SCE, aes(x = t_SCE, y = shift_id),
alpha = 1, shape = 4, color = 'red', size = 2, stroke = 1.5) +
geom_segment(data = LIM,
aes(x = start_time, xend = end_time, y = shift_id, yend = shift_id),
arrow = arrow(length = unit(0.2, "cm")), lineend = 'butt', size = 0.8) +
scale_x_continuous(expand = c(0.001, 0))+
scale_y_continuous(labels = c(0, max_int), breaks = c(0, max_int),
expand = c(0.02, 0)) +
geom_vline(xintercept = rest_time[1], color="green",
alpha = 0.7, size = 1.2, linetype = "dashed") +
geom_vline(xintercept = rest_time[2], color="green",
alpha = 0.7, size = 1.2, linetype = "dashed") +
labs(x = unname(latex2exp::TeX('Time to SCEs (hours), $t_1 \\rightarrow t_n$')),
y = "intensity") +
geom_text(aes(x = c(4.5, 8.5), y = rep(max_int/3, 2),
label = c("rest 1","rest 2")),
color = "darkgreen", size = 5, family="LM Roman 10") +
theme_bw()+
theme(panel.grid = element_blank(),
text = element_text(size=10, family="LM Roman 10"))
p0
ggsave("figs/PLP_NHPP_intensity_rev.pdf", p0, width = 10, height = 6.18)
set.seed(223)
tau0 = 13; beta0 = 1.2; theta0 = 2; kappa = 0.8
rest_time = c(4, 8)
# SCE time
t_SCE = c(1.5081062, 2.9090437, 3.821632,
4.75131, 6.3752535, 7.2168730,
10.5380954, 12.1135213)
shift_id= rep(0, length(t_SCE))
SCE = data.frame(shift_id, t_SCE)
# Intensity and limit
INTENS = data.frame(t = seq(0, tau0, 0.001),
intensity = plp(seq(0, tau0, 0.001), beta0, theta0)) %>%
mutate(intensity1 = case_when(
t >= rest_time[1] & t <= rest_time[2] ~ intensity*kappa^1,
t >= rest_time[2]  ~ intensity*kappa^2,
TRUE ~ intensity*kappa^0))
# plot
p1 = ggplot() +
geom_line(data = INTENS[INTENS$t < rest_time[1],],
aes(x = t, y = intensity1), size = 0.8) +
geom_line(data = INTENS[INTENS$t > rest_time[1]&INTENS$t <= rest_time[2],],
aes(x = t, y = intensity1), size = 0.8) +
geom_line(data = INTENS[INTENS$t > rest_time[2],],
aes(x = t, y = intensity1), size = 0.8) +
geom_line(data = INTENS,
aes(x = t, y = intensity), alpha = 0.3, size = 0.8)+
geom_point(data = SCE, aes(x = t_SCE, y = shift_id),
alpha = 1, shape = 4, color = 'red', size = 2, stroke = 1.5) +
geom_segment(data = LIM,
aes(x = start_time, xend = end_time, y = shift_id, yend = shift_id),
arrow = arrow(length = unit(0.2, "cm")), lineend = 'butt', size = 0.8) +
scale_x_continuous(expand = c(0.001, 0))+
scale_y_continuous(labels = c(0, max_int), breaks = c(0, max_int),
expand = c(0.02, 0)) +
geom_vline(xintercept = rest_time[1], color="green",
alpha = 0.7, size = 1.2, linetype = "dashed") +
geom_vline(xintercept = rest_time[2], color="green",
alpha = 0.7, size = 1.2, linetype = "dashed")+
labs(x = unname(latex2exp::TeX('Time to SCEs (hours), $t_1 \\rightarrow t_n$')),
y = "intensity") +
geom_text(aes(x = c(4.5, 8.5), y = rep(max_int/3, 2),
label = c("rest 1","rest 2")),
color = "darkgreen", size = 5, family="LM Roman 10") +
theme_bw()+
theme(panel.grid = element_blank(),
text = element_text(size=10, family="LM Roman 10"))
p1
ggsave("figs/PLP_jump_point_intensity_rev.pdf", p1, width = 10, height = 6.18)
8434537-6610268
7027041-1824269
6610268 - 5202772
20000*1000/6939630
20152*1000/6646370
2^31
length(2^31)
nchar(2^31)
rstudioapi::addTheme("https://raw.githubusercontent.com/patrickshox/Mojave-Dark-RStudio-Theme/master/Mojave%20Dark.rstheme", apply=TRUE, force=TRUE)
Sys.Date()
2000*7.13
2000*7
pacman::p_load(ggplot2, dplyr)
pacman::p_load(ggplot2, dplyr, lubridate)
d = tibble::tibble(
time = hm(c("7:00", "12:00", "2:30", "8:00", "10:00", "2:00"))
)
d
d = tibble::tibble(
time = ymd_hm(c("2015-06-23 7:00", "2015-06-23 12:00", "2015-06-23 14:30", "2015-06-23 20:00", "2015-06-23 22:00", "2015-06-24 2:00"))
)
d
agg30 = fread("../data/31-analyses_30_minute_intervals.csv")
pacman::p_load(dplyr, data.table, knitr, kableExtra)
agg30 = fread("../data/31-analyses_30_minute_intervals.csv")
list.files()
agg30 = fread("/data/31-analyses_30_minute_intervals.csv")
agg30 = fread("data/31-analyses_30_minute_intervals.csv")
agg30
kable(agg30 %>%
dplyr::slice(1:5) %>%
dplyr::mutate(shift_start = gsub("T|Z", " ", shift_start),
shift_end = gsub("T|Z", " ", shift_end)) %>%
dplyr::select(driver, start_time, end_time, interval_time, distance),
"latex", align = "c",
booktab = TRUE, linesep = "",
caption = "30 minutes intervals data for hierarchical logistic and Poisson regression") %>%
kable_styling(latex_options = c("HOLD_position", "scale_down"))
#  landscape()
shif = fread("data/32-analyses_shifts.csv")
shift
shif
2500*12
list.files("figs/")
list.files("figs/")
